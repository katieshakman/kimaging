function HoldingAndStimGUI_KS

x = questdlg('Stimulator off?');
if ~strcmp(x,'Yes')
    warndlg('You need to turn off stimulator to start GUI');
    return
end
handles.DAQ = digitalio('mcc',0); 
handles.ERB = digitalio('mcc',1); % Mechanical Switch (USB-ERB08 MCC 8-Relay Module)
handles.lines = addline(handles.DAQ,0:2,'out');
handles.ERBlines = addline(handles.ERB,0:1,'out');

handles.AnalogOut = analogoutput('mcc',0);
handles.AnalogChannel = addchannel(handles.AnalogOut,0); % Provides power to ERB for "Holding Potential", 
% which is graded and can vary from 0 to 4.095 V (but wired so it will
% always be the opposite polarity when compared to the stimulation
% potential. 


handles.Fig = figure('DeleteFcn',{@Callback_DelFig});
% handles.Popup = uicontrol(handles.Fig,...
%     'Style','popup',...
%     'Units','normalized',...
%     'Position',[0.3 0.7 0.4 0.1],...
%     'String',{'V-pulse','I-pulse'},...
%     'Callback',{@Callback_popup});
handles.Push = uicontrol(handles.Fig,...
    'Style','push',...
    'Units','normalized',...
    'Position',[0.3 0.6 0.6 0.2],...
    'String','Start (Imaging and Stim with Specified Delay)',...
    'Callback',{@Callback_push});
handles.Toggle = uicontrol(handles.Fig,...
    'Style','toggle',...
    'Units','normalized',...
    'Position',[0.1 0.6 0.1 0.2],...
    'String','Holding',...
    'Callback',{@Callback_toggle});
handles.Edit3 = uicontrol(handles.Fig,...
    'Style','edit',...
    'Units','normalized',...
    'Position',[0.1 0.45 0.1 0.1],...
    'String','0',...
    'Callback',{@Callback_edit3});
handles.Text3 = uicontrol(handles.Fig,...
    'Style','text',...
    'Units','normalized',...
    'Position',[0.21 0.45 0.2 0.1],...
    'String','V holding (opp. polarity from stim V)');
handles.Edit1 = uicontrol(handles.Fig,...
    'Style','edit',...
    'Units','normalized',...
    'Position',[0.3 0.2 0.2 0.1],...
    'String','3');
handles.Text1 = uicontrol(handles.Fig,...
    'Style','text',...
    'Units','normalized',...
    'Position',[0.5 0.2 0.2 0.1],...
    'String','seconds delay (both boxes)');
handles.Edit2 = uicontrol(handles.Fig,...
    'Style','edit',...
    'Units','normalized',...
    'Position',[0.3 0.1 0.2 0.1],...
    'String','1');
handles.Text2 = uicontrol(handles.Fig,...
    'Style','text',...
    'Units','normalized',...
    'Position',[0.5 0.1 0.2 0.1],...
    'String','seconds stim for WPI Box');

handles.baseval = [0 0 0];
handles.imtrig = [1 0 0];
handles.stimtrig = [0 1 0];

handles.holdON = [1 1];
handles.holdOFF = [0 0];

putvalue(handles.ERB,handles.holdOFF);

%     function Callback_popup(hObj,eventdata)
%         val = get(hObj,'Value');
%         if val == 1
%             disp('Vp')
%         elseif val == 2
%             disp('Ip')
%         end
%     end

    function Callback_push(hObj,eventdata)
        delay = str2double(get(handles.Edit1,'String'));
        stim = str2double(get(handles.Edit2,'String'));
        holdingState = get(handles.Toggle,'Value'); % Value of Toggle Button (0 if out or 1 for pushed in). 
            
        putvalue(handles.DAQ,handles.imtrig);
        pause(delay);
        putvalue(handles.ERB,handles.holdOFF); % Remove holding potential. 
        set(handles.Toggle,'Value',0); % Toggle button out (not pushed). 
        
        putvalue(handles.DAQ,handles.stimtrig);
        pause(stim);
        putvalue(handles.DAQ,handles.baseval);
        putvalue(handles.ERB,repmat(holdingState,[1 2])); % Use [0 0] if out or use [1 1] if pushed in.
        % Recall that handles.holdOFF = [0 0], and handles.holdON = [1 1].
        % Determines whether to use a holding potential. 
        set(handles.Toggle,'Value',holdingState); % Return toggle button to the starting state. 
    end

    function Callback_toggle(hObj,eventdata)
        if get(hObj,'Value')==1
            putvalue(handles.ERB,handles.holdON);
        else
            putvalue(handles.ERB,handles.holdOFF);
        end
    end

    function Callback_DelFig(hObj,eventdata)
        putvalue(handles.ERB,handles.holdOFF);
        putsample(handles.AnalogOut,0);
    end

    function Callback_edit3(hObj,eventdata)
        holdingV = str2double(get(hObj,'String'));
        putsample(handles.AnalogOut,holdingV);
    end


end
